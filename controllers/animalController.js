// controllers/animalController.js

const Animal = require("../models/Animal");
const LarTemporario = require("../models/LarTemporario");
const ONG = require("../models/Ong");
const sendEmail = require("../utils/sendEmail");


async function cadastrarAnimal(req, res) {
  console.log("üì¶ req.body.precisaLarTemporario:", req.body.precisaLarTemporario);

  try {
    console.log("üî• ENTROU no controller cadastrarAnimal");
console.log("req.body.ong:", req.body.ong);
    if (!req.body.nome) {
      return res.status(400).json({ error: "Campo nome √© obrigat√≥rio." });
    }

    const fotos = req.file ? [req.file.path] : [];

    const body = {
      ...req.body,
      nome: String(req.body.nome),
      castrado: req.body.castrado === "true" || req.body.castrado === true,
      vacinado: req.body.vacinado === "true" || req.body.vacinado === true,
      precisaLarTemporario:
        req.body.precisaLarTemporario === "true" || req.body.precisaLarTemporario === true,
      necessidadesEspeciais:
        req.body.necessidadesEspeciais === "true" || req.body.necessidadesEspeciais === true,
      usaMedicacao: req.body.usaMedicacao === "true" || req.body.usaMedicacao === true,
      deficiencia: req.body.deficiencia === "true" || req.body.deficiencia === true,
    };
const ongId = req.body.ong || req.user?.id;
if (!ongId) {
  return res.status(400).json({ error: "ONG n√£o identificada." });
}
    const novoAnimal = new Animal({
      ...body,
      fotos,
      ong: ongId,
    });

await novoAnimal.save();
console.log("üêæ novoAnimal.precisaLarTemporario:", novoAnimal.precisaLarTemporario);

console.log("‚úÖ Animal salvo no banco.");
const animalPopulado = await Animal.findById(novoAnimal._id).populate("ong");
console.log("‚úÖ Animal populado:", animalPopulado);

// ENVIA E-MAILS ANTES DA RESPOSTA
if (novoAnimal.precisaLarTemporario) {
  console.log("üß™ Tipo de precisaLarTemporario:", typeof novoAnimal.precisaLarTemporario);
console.log("üß™ Valor de precisaLarTemporario:", novoAnimal.precisaLarTemporario);

 try {
  console.log("üß™ FOR√áANDO ENVIO DE E-MAIL (ignorar precisaLarTemporario)");

  const todosLares = await LarTemporario.find({ approved: true });
  console.log("üîç Total de lares encontrados:", todosLares.length);

  const laresCompat√≠veis = todosLares; // ignora filtro pra testar
  console.log("üéØ Enviando para todos os lares compat√≠veis");

await Promise.allSettled(
  laresCompat√≠veis.map(async (lar) => {
    console.log(`üì® Tentando enviar para: ${lar.email}`);
    try {
      await sendEmail({
        name: lar.nome,
        email: lar.email,
        phone: lar.telefone,
        subject: `üêæ Novo animal precisa de lar tempor√°rio!`,
        html: `
          <h2>Ol√° ${lar.nome}!</h2>
          <p>Uma ONG cadastrou um animal que precisa de lar tempor√°rio.</p>
          <p><strong>Animal:</strong> ${animalPopulado.nome}</p>
          <p><strong>ONG respons√°vel:</strong> ${animalPopulado.ong?.name || "ONG n√£o identificada"}</p>
          <p><strong>Descri√ß√£o:</strong> ${animalPopulado.descricao || "Sem descri√ß√£o fornecida"}</p>
          <p>Se voc√™ puder ajudar, acesse sua √°rea logada do sistema AcolhaPatas:</p>
          <p><a href="https://acolhapatas.com.br/login" target="_blank">https://acolhapatas.com.br/login</a></p>
          <br />
          <p>Obrigado por fazer parte dessa rede de apoio! üíö</p>
        `
      });
      console.log("‚úÖ E-mail enviado com sucesso para:", lar.email);
    } catch (err) {
      console.error(`‚ùå Erro ao enviar e-mail para ${lar.email}:`, err.message);
    }
  })
);

} catch (err) {
  console.error("‚ùå Erro no p√≥s-processamento (for√ßado):", err);
}

}

// AGORA SIM, envia a resposta
res.status(201).json(animalPopulado);


   
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao cadastrar animal.' });
  }
}




async function atualizarAnimal(req, res) {
  return res.status(501).json({ error: "Fun√ß√£o atualizarAnimal n√£o implementada neste arquivo." });
}

module.exports = {
  cadastrarAnimal,
  atualizarAnimal
};


